\d
\l
\q
\d
\l
hola buenos diasque tal estas?estas muy callado hoybueno, ya termino;
\d
\l
\h
\h ALTER
\!ls
\! ls
\! pwd
CREATE DATABASE networking;
\l
drop database Networking;
\l
CREATE TABLE friends(nombre VARCHAR, edad INT, email VARCHAR);
\d
\d friends
DROP TABLE friends;
\d
CREATE TABLE friends(nombre VARCHAR, edad INT, email VARCHAR);
insert into friends values();
insert into friends;
insert into friends values (null);
select * from friends;
\d friends
drop table friends;
CREATE TABLE friends(nombre VARCHAR NOT NULL, edad INT, email VARCHAR);
\d friends
INSERT INTO friends VALUES (null);
ALTER TABLE friends SET edad NOT NULL;
\h ALTER TABLE
ALTER TABLE friends edad SET NOT NULL;
\h ALTER TABLE
\h ALTER TABLE
ALTER TABLE friends ALTER edad SET NOT NULL;
\d
\d friends
INSERT INTO friends VALUES ('Israel',25,'isra@herraiz.org');
SELECT * FROM friends;
INSERT INTO friends VALUES ('Pepe',40,'pepe@pepe.com');
INSERT INTO friends VAUES ('Pedro',32);
INSERT INTO friends VALUES ('Pedro',32);
SELECT * FROM friends;
SELECT nombre, edad FROM friends;
SELECT email, edad FROM friends;
SELECT nombre, edadFROM friendsWHERE edad > 30;
SELECT nombre, edad FROM friends WHERE edad > 30;
SELECT * FROM friends WHERE edad > 30;
SELECT * FROM friends WHERE edad < 30;
SELECT * FROM friends WHERE edad <> 40;
SELECT * FROM friends WHERE edad != 40;
SELECT * FROM friends WHERE nombre = "Pedro";
SELECT * FROM friends WHERE nombre = 'Pedro';
SELECT * FROM friends WHERE nombre != 'Pedro';
SELECT * FROM friends WHERE nombre LIKE 'P';
SELECT * FROM friends WHERE nombre LIKE '%T';
SELECT * FROM friends WHERE UPPER(nombre) LIKE '%T';
SELECT * FROM friends WHERE nombre LIKE '%P%';
SELECT * FROM friends WHERE nombre LIKE '%r%';
SELECT * FROM friends WHERE nombre LIKE '%ra%';
SELECT * FROM friends WHERE nombre NOT LIKE '%ra%';
SELECT * FROM friends WHERE nombre LIKE '%RA%';
SELECT * FROM friends WHERE nombre LIKE '%Pe%';
SELECT * FROM friends WHERE nombre LIKE '%pe%';
select * from friends;
SELECT * FROM friends WHERE email = NULL;
SELECT * FROM friends WHERE email IS NULL;
DELETE FROM friends WHERE edad < 30;
SELECT * FROM friends;
DELETE FROM friends;
\d
SELECT * FROM friends;
\d friends
ALTER TABLE friends ADD COLUMN residencia VARCHAR;
\d
\d friends
ALTER TABLE friends ADD COLUMN lugar de residencia VARCHAR;
ALTER TABLE friends ADD COLUMN lugar_de_residencia VARCHAR;
ALTER TABLE friends ADD COLUMN lugar-de-residencia VARCHAR;
ALTER TABLE friends ADD COLUMN 28residencia VARCHAR;
DROP TABLE friends;
CREATE TABLE friends(nombre VARCHAR NOT NULL, edad INT, email VARCHAR, residencia VARCHAR);
\d friends
INSERT INTO friends VALUES ('Pepe',25,null,'Madrid');
INSERT INTO friends VALUES ('Pedro',40,null,'Getafe');
INSERT INTO friends VALUES ('Bruno',3,null,'Getafe');
INSERT INTO friends VALUES ('Abuelo',70,null,'Barcelona');
SELECT * FROM friends;
INSERT INTO friends VALUES ('Abuela',70,null,'Barcelona');
SELECT * FROM friends;
SELECT COUNT(*) FROM friends;
SELECT * FROM friends WHERE edad < 18;
SELECT * FROM friends WHERE edad > 65;
SELECT * FROM friends WHERE (edad > 65) OR (edad < 18);
SELECT * FROM friends WHERE (edad > 65) AND (edad < 18);
SELECT * FROM friends WHERE residencia = Madrid;
SELECT * FROM friends WHERE residencia = 'Madrid';
SELECT * FROM friends WHERE residencia != 'Madrid';
SELECT * FROM friends WHERE residencia != 'Madrid' AND edad < 18;
\h UPDATE
UPDATE friends SET edad=33 WHERE nombre='Bruno';
SELECT * FROM friends;
UPDATE friends SET edad=4,nombre='Isidro' WHERE edad=33;
SELECT * FROM friends;
UPDATE friends SET residencia='Benidorm' WHERE edad > 65;
SELECT * FROM friends;
\d
DROP TABLES friends;
DROP TABLE friends;
CREATE TABLE friends(nombre VARCHAR NOT NULL, edad INT, email VARCHAR PRIMARY KEY, residencia VARCHAR);
\d friends
DROP TABLE friends;
CREATE TABLE friends(nombre VARCHAR PRIMARY KEY, edad INT, email VARCHAR PRIMARY KEY, residencia VARCHAR);
CREATE TABLE friends(nombre VARCHAR, edad INT, email VARCHAR, residencia VARCHAR, PRIMARY KEY(email,nombre));
\d friends
INSERT INTO friends VALUES ('Abuela',70,null,'Barcelona');
INSERT INTO friends VALUES ('Abuela',70,'abuelo@abuelos.com','Barcelona');
SELECT * FROM friends;
INSERT INTO friends VALUES (null,70,'abuela@abuelos.com','Barcelona');
INSERT INTO friends VALUES ('Yayo',70,'abuelo@abuelos.com','Barcelona');
SELECT * FROM friends;
INSERT INTO friends VALUES ('Yayo',70,'abuelo@abuelos.com','Barcelona');
ALTER TABLE friends ADD COLUMN telefono INT;
\d friends
select * from friends;
ALTER TABLE friends DROP COLUMN telefono;
ALTER TABLE friends DROP COLUMN email;
\d
\d friends
ALTER TABLE friends ADD PRIMARY KEY nombre;
ALTER TABLE friends ADD PRIMARY KEY (nombre);
\d friends
ALTER TABLE friends DROP COLUMN nombre;
\d friends
\! wget https://raw.githubusercontent.com/masterdatascience/postgres/mas
\! wget https://raw.githubusercontent.com/masterdatascience/postgres/master/my_fb_friends.csv
\! ls *.csv
\! ll *.csv
\! ls -hl *.csv
\d
\l
\! ls -hl *.csv
\! head *csv
\! csvlook *csv
\! csvlook -d '^' *csv
\d
drop table friends;
\! csvsql
\! csvsql -h
\! csvsql -d '^' *csv
\d
\d
\d my_fb_friends 
SELECT * FROM my_fb_friends ;
DROP TABLE my_fb_friends 
\q
drop table my_fb_friends ;
\d
\d my_fb_friends 
ALTER TABLE my_fb_friends ADD PRIMARY KEY(email);
\COPY my_fb_friends '/home/dsc/my_fb_friends.csv' DELIMITER '^' CSV HEADER
\COPY my_fb_friends FROM '/home/dsc/my_fb_friends.csv' DELIMITER '^' CSV HEADER
SELECT * FROM my_fb_friends;
SELECT * FROM my_fb_friends WHERE edad > 35;
SELECT * FROM my_fb_friends WHERE age > 35;
SELECT *, (age > 35) AS viejuno FROM my_fb_friends ;
SELECT *, (age > 35) AS viejuno FROM my_fb_friends AS t WHERE t.residence='Berlin';
SELECT q.viejuno FROM (SELECT *, (age > 35) AS viejuno FROM my_fb_friends) AS q;
SELECT q.viejuno FROM (SELECT *, (age > 35) AS viejuno FROM my_fb_friends);
SELECT q.viejuno FROM (SELECT *, (age > 35) AS viejuno FROM my_fb_friends) AS q;
select * from friends;
select * from my_fb_friends ;
SELECT COUNT(*) FROM my_fb_friends ;
SELECT DISTINCT residence FROM my_fb_friends ;
SELECT COUNT(DISTINCT residence) FROM my_fb_friends ;
SELECT * FROM my_fb_friends ;
SELECT * FROM my_fb_friends ORDER BY age;
SELECT * FROM my_fb_friends WHERE residence='Madrid' ORDER BY age;
SELECT * FROM my_fb_friends ORDER BY age;
SELECT * FROM my_fb_friends ORDER BY age DESC;
SELECT * FROM my_fb_friends ORDER BY name,age;
SELECT * FROM my_fb_friends ORDER BY name;
SELECT * FROM my_fb_friends ORDER BY age DESC LIMIT 1;
SELECT * FROM my_fb_friends ORDER BY age LIMIT 1;
SELECT * FROM my_fb_friends ;
SELECT * FROM my_fb_friends WHERE age BETWEEN 35 AND 40;
SELECT * FROM my_fb_friends WHERE age IN (35,37);
SELECT * FROM my_fb_friends WHERE age NOT IN (35,37);
SELECT * FROM my_fb_friends WHERE age=35 OR age=37;
SELECT * FROM my_fb_friends WHERE NOT (age=35 OR age=37);
SELECT AVG(age) FROM my_fb_friends ;
SELECT AVG(name) FROM my_fb_friends ;
SELECT MAX(age) FROM my_fb_friends ;
SELECT MIN(age) FROM my_fb_friends ;
SELECT * FROM my_fb_friends WHERE age=(SELECT MIN(age) FROM my_fb_friends AS q);
SELECT STD(age) FROM my_fb_friends ;
SELECT SD(age) FROM my_fb_friends ;
\h STDEV
\h STC
\h STD
sdev;
\h
SELECT *, (age > 35) AS viejuno FROM my_fb_friends;
SELECT residence, COUNT(*) FROM my_fb_friends ;
SELECT residence, COUNT(*) FROM my_fb_friends GROUP BY residence;
SELECT residence, (age > 35) AS viejuno, COUNT(*) FROM my_fb_friends GROUP BY residence, viejuno;
SELECT (age > 35) AS viejuno, AVG(age) FROM my_fb_friends ;
SELECT (age > 35) AS viejuno, AVG(age) FROM my_fb_friends GROUP BY viejuno;
SELECT (age > 35) AS viejuno, AVG(age), COUNT(*), MIN(age), MAX(age) FROM my_fb_friends GROUP BY viejuno;
\d my_fb_friends
SELECT residence, COUNT(*) FROM my_fb_friends GROUP BY residence;
SELECT residence, COUNT(*) FROM my_fb_friends GROUP BY residence HAVING AVG(age)>35;
SELECT * FROM (SELECT residence, COUNT(*) AS c, AVG(age) AS m FROM my_fb_friends GROUP BY residence) AS qWHERE q.m > 35;
SELECT residence, c FROM (SELECT residence, COUNT(*) AS c, AVG(age) AS m FROM my_fb_friends GROUP BY residence) AS qWHERE q.m > 35;
\q
\d
SELECT COUNT(*) FROM optd_aircraft;
SELECT * FROM optd_aircraft WHERE nb_engines!=null ORDER BY nb_engines DESC LIMIT 1;
SELECT * FROM optd_aircraft WHERE nb_engines IS NOT null ORDER BY nb_engines DESC LIMIT 1;
SELECT MAX(nb_engines) FROM optd_aircraft ;
SELECT MIN(nb_engines) FROM optd_aircraft ;
SELECT AVG(nb_engines) FROM optd_aircraft ;
SELECT COUNT(nb_engines) FROM optd_aircraft ;
SELECT * FROM optd_aircraft WHERE nb_engines IS NOT null ORDER BY nb_engines DESC LIMIT 1;
\d optd_aircraft 
SELECT nb_engines, COUNT(nb_engines) FROM optd_aircraft ;
SELECT nb_engines, COUNT(nb_engines) FROM optd_aircraft GROUP BY nb_engines;
SELECT nb_engines, COUNT(model) FROM optd_aircraft GROUP BY nb_engines;
SELECT nb_engines, COUNT(*) FROM optd_aircraft GROUP BY nb_engines;
SELECT nb_engines, COUNT(*) FROM optd_aircraft GROUP BY nb_engines ORDER BY count DESC LIMIT 1;
SELECT nb_engines, COUNT(*) AS n FROM optd_aircraft GROUP BY nb_engines ORDER BY n DESC LIMIT 1;
SELECT MAX(n) FROM (SELECT nb_engines, COUNT(*) AS n FROM optd_aircraft GROUP BY nb_engines) AS q;
SELECT * FROM (SELECT nb_engines, COUNT(*) AS n FROM optd_aircraft GROUP BY nb_engines) AS q ORDER BY n DESC LIMIT 1;
SELECT * FROM (SELECT nb_engines, COUNT(*) AS n FROM optd_aircraft GROUP BY nb_engines) AS q WHERE n=MAX(n);
SELECT * FROM (SELECT nb_engines, COUNT(*) AS n FROM optd_aircraft GROUP BY nb_engines) AS q WHERE n=(.......);
\h ORDER
\h SELECT
USE facebook;
\d facebook
\d
\d my_fb_friends
select * FROM my_fb_friends ;
\d
\COPY linkedin FROM './linkedin.csv' DELIMITER '^' CSV HEADER
SELECT * FROM linkedin ;
SELECT * FROM my_fb_friends ;
SELECT * FROM my_fb_friends AS a, linkedin AS b WHERE a.email=b.email;
SELECT * FROM my_fb_friends AS aINNER JOIN linkedin AS bON a.email=b.email;
SELECT * FROM my_fb_friends AS lLEFT OUTER JOIN linkedin AS rON l.email=r.email;
SELECT * FROM linkedin AS lLEFT OUTER JOIN my_fb_friends AS rON l.email=r.email;
SELECT COUNT(*) FROM (SELECT * FROM linkedin AS lLEFT OUTER JOIN my_fb_friends AS rON l.email=r.email) AS q;
SELECT COUNT(*) FROM linkedin AS l;
SELECT * FROM my_fb_friends AS lRIGHT OUTER JOIN linkedin AS rON l.email=r.email;
SELECT * FROM my_fb_friends AS lRIGHT OUTER JOIN linkedin AS rON l.email=r.email;
SELECT * FROM linkedin AS lLEFT OUTER JOIN my_fb_friends AS RON l.email=r.email;
SELECT COUNT(*) FROM linkedin ;
SELECT * FROM linkedin AS lRIGHT OUTER JOIN my_fb_friends AS rON l.email=r.email;
SELECT COUNT(*) FROM my_fb_friends ;
SELECT COUNT(DISTINCT emaiL) FROM my_fb_friends ;
\d my_fb_friends
\d linkedin 
ALTER TABLE my_fb_friends ADD telefono INT;
ALTER TABLE linkedin ADD telefono INT;
\d my_fb_friends
\d linkedin 
UPDATE linkedin SET telefono=7;
UPDATE my_fb_friends SET telefono=6;
SELECT * FROM my_fb_friends ;
SELECT * FROM linkedin ;
SELECT * FROM my_fb_friends AS lLEFT OUTER JOIN linkedin AS rON l.email=r.email;
CREATE TABLE j AS (SELECT * FROM my_fb_friends AS l LEFT OUTER JOIN linkedin AS r ON l.email=r.email);
CREATE TABLE j AS (SELECT l.name, l.email, r.telefono, l.telefono FROM my_fb_friends AS l LEFT OUTER JOIN linkedin AS r ON l.email=r.email);
CREATE TABLE j AS (SELECT l.name, l.email, r.telefono AS tr, l.telefono AS tl FROM my_fb_friends AS l LEFT OUTER JOIN linkedin AS r ON l.email=r.email);
SELECT * FROM j;
SELECT * FROM linkedin AS lRIGHT OUTER JOIN my_fb_friends AS rON l.email=r.email;
SELECT * FROM (SELECT * FROM linkedin AS lRIGHT OUTER JOIN my_fb_friends AS rON l.email=r.email) AS q;
SELECT telefono FROM (SELECT * FROM linkedin AS lRIGHT OUTER JOIN my_fb_friends AS rON l.email=r.email) AS q;
SELECT * FROM my_fb_friends ;
SELECT FROM linkedin ;
SELECT * FROM linkedin ;
UPDATE linkedin SET telefono=null;
SELECT * FROM linkedin ;
SELECT * FROM my_fb_friends ;
UPDATE linkedin SET telefono=6 WHERE company=IBM;
UPDATE linkedin SET telefono=6 WHERE company='IBM';
SELECT * FROM linkedin ;
SELECT * FROM my_fb_friends ;
SELECT * FROM linkedin AS lLEFT OUTER JOIN my_fb_friends AS rON l.email=r.emailWHERE l.telefono IS NOT NULL;
SELECT * FROM linkedin AS lLEFT OUTER JOIN my_fb_friends AS rON l.email=r.email AND l.telefono=r.telefono;
SELECT * FROM linkedin AS lINNER JOIN my_fb_friends AS rON l.email=r.email AND l.telefono=r.telefono;
SELECT * FROM my_fb_friends ;
SELECT * FROM linkedin ;
SELECT * FROM my_fb_friends AS lFULL OUTER JOIN linkedin AS rON l.email=r.email;
ALTER TABLE linkedin DROP COLUMN telefono ;
ALTER TABLE my_fb_friends DROP COLUMN telefono ;
SELECT * FROM my_fb_friends AS lFULL OUTER JOIN linkedin AS rON l.email=r.email;
\d
\d optd_airlines 
select 2char_code from optd_airlines limit 4;
